name: MCP Flow

on:
  push:
    branches: [ main ]
    paths:
      - 'src/mcp/**'
      - 'src/sdk/**'
      - '.github/workflows/mcp-pipeline.yml'
      - 'tests/Avro.Mcp.*.UnitTests/**'
      - 'tests/Avro.Mcp.*.IntegrationTests/**'
      - 'Avro.sln'
      - 'Directory.*.props'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/mcp/**'
      - 'src/sdk/**'
      - '.github/workflows/mcp-pipeline.yml'
      - 'tests/Avro.Mcp.*.UnitTests/**'
      - 'tests/Avro.Mcp.*.IntegrationTests/**'
      - 'Avro.sln'
      - 'Directory.*.props'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Upload MCP server artifact
      uses: actions/upload-artifact@v4
      with:
        name: mcp-server-artifacts
        path: |
          **/bin/Release/net10.0/Avro.Mcp.Example*
          **/bin/Release/Avro.Mcp.*.nupkg

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: dotnet restore

    - name: Run Unit Tests
      run: dotnet test --filter "FullyQualifiedName~Avro.Mcp" --configuration Release --verbosity normal --logger trx

    - name: Run Integration Tests
      run: dotnet test --filter "FullyQualifiedName~Avro.Mcp.Example.IntegrationTests" --configuration Release --verbosity normal --logger trx

  deploy:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build projects
      run: dotnet build --configuration Release --no-restore

    - name: Create output directory
      run: mkdir -p ./publish

    - name: Publish MCP application
      run: dotnet publish src/mcp/Avro.Mcp.Example --configuration Release --output ./publish --no-build

    - name: List published files
      run: ls -la ./publish/

    - name: Upload published application
      uses: actions/upload-artifact@v4
      with:
        name: mcp-server-published
        path: ./publish/

  validate:
    needs: deploy
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Download published application
      uses: actions/download-artifact@v4
      with:
        name: mcp-server-published
        path: ./mcp-server
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'
        
    - name: Test MCP server startup
      run: |
        cd ./mcp-server
        echo "Testing MCP server can start..."
        timeout 10s dotnet Avro.Mcp.Example.dll --urls http://localhost:5000 || echo "Server started successfully"
        
        echo "✅ MCP Server validation completed successfully!"
        echo "� Application published and startup tested"