name: MCP Flow

on:
  push:
    branches: [ main ]
    paths:
      - 'src/mcp/**'
      - '.github/workflows/mcp-pipeline.yml'
      - 'tests/Avro.Mcp.*.UnitTests/**'
      - 'tests/Avro.Mcp.*.IntegrationTests/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/mcp/**'
      - '.github/workflows/mcp-pipeline.yml'
      - 'tests/Avro.Mcp.*.UnitTests/**'
      - 'tests/Avro.Mcp.*.IntegrationTests/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: dotnet restore src/mcp

    - name: Build
      run: dotnet build src/mcp --no-restore --configuration Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mcp-build-artifacts
        path: |
          src/mcp/**/bin/Release/*.dll
          src/mcp/**/bin/Release/*.nupkg

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: |
        dotnet restore src/mcp
        dotnet restore tests/Avro.Mcp.*.UnitTests
        dotnet restore tests/Avro.Mcp.*.IntegrationTests

    - name: Run Unit Tests
      run: dotnet test tests/Avro.Mcp.*.UnitTests --configuration Release --verbosity normal

    - name: Run Integration Tests
      run: dotnet test tests/Avro.Mcp.*.IntegrationTests --configuration Release --verbosity normal

  deploy:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: mcp-build-artifacts
        path: artifacts

    - name: Pack NuGet packages
      run: dotnet pack src/mcp --configuration Release --output ./nupkg --no-build

    - name: Push NuGet packages
      run: |
        dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}