name: SDK Flow

on:
  push:
    branches: [ main ]
    paths:
      - 'src/sdk/**'
      - 'tests/Avro.Os.*.UnitTests/**'
      - '.github/workflows/sdk-pipeline.yml'
      - 'Avro.sln'
      - 'Directory.*.props'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/sdk/**'
      - 'tests/Avro.Os.*.UnitTests/**'
      - '.github/workflows/sdk-pipeline.yml'
      - 'Avro.sln'
      - 'Directory.*.props'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sdk-build-artifacts
        path: |
          **/bin/Release/Avro.Os.*.dll
          **/bin/Release/Avro.Os.*.nupkg

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Test
      run: dotnet test --filter "FullyQualifiedName~Avro.Os" --configuration Release --verbosity normal

  deploy:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'

    - name: Restore dependencies
      run: dotnet restore

    - name: Pack NuGet packages
      run: |
        dotnet pack src/sdk/Avro.Os.Abstractions --configuration Release --output ./nupkg
        dotnet pack src/sdk/Avro.Os.Identity --configuration Release --output ./nupkg

    - name: Push NuGet packages
      if: env.NUGET_API_KEY != ''
      run: |
        dotnet nuget push ./nupkg/*.nupkg --api-key ${{ env.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        
  validate:
    needs: deploy
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'avro/avro-sdk-validation'
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        dotnet-quality: 'preview'
        
    - name: Add NuGet source
      run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org
      
    - name: Validate SDK packages
      run: |
        dotnet new console -o ValidationApp
        cd ValidationApp
        dotnet add package Avro.Os.Identity
        dotnet add package Avro.Os.Abstractions
        dotnet run